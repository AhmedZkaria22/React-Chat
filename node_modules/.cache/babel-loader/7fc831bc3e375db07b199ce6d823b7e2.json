{"ast":null,"code":"var _jsxFileName = \"E:\\\\ITI\\\\React\\\\pre-project\\\\src\\\\Pages\\\\ChatBotExp2.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ChatBot from 'react-simple-chatbot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Reviewc extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: 'Ahmed',\n      city: 'Alexandria',\n      number: '01090761007',\n      site: 'Has health',\n      slogane: 'where care found'\n    };\n  }\n\n  componentWillMount() {\n    const {\n      steps\n    } = this.props; //const { name, city, number, site, slogane } = steps;\n    //this.setState({ name, city, number, site, slogane });\n\n    const {\n      name\n    } = steps;\n    this.setState({\n      name\n    });\n  }\n\n  render() {\n    const {\n      name,\n      city,\n      number,\n      site,\n      slogane\n    } = this.state;\n\n    if (this.props.inname == \"city\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Welcome in \", city, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReviewc.propTypes = {\n  steps: PropTypes.object\n};\nReviewc.defaultProps = {\n  steps: undefined\n};\n\nclass ChatBotExp2 extends Component {\n  render() {\n    let ans1 = Object;\n    return /*#__PURE__*/_jsxDEV(ChatBot, {\n      steps: [{\n        id: '1',\n        message: 'Hi ahmed what do you mind?',\n        trigger: '2'\n      }, {\n        id: '2',\n        user: true,\n        trigger: `${value => {\n          if (value == \"what city?\") {\n            return '3';\n          }\n\n          return '2';\n        }}`\n        /*validator: (value) => {\r\n          if ( value == \"what city?\" ) {\r\n            ans1 = Object.bind(<Reviewc inname=\"city\"/>);\r\n          } \r\n            return true;\r\n        },*/\n\n      }, {\n        id: '3',\n        Component: /*#__PURE__*/_jsxDEV(Reviewc, {\n          inname: \"city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 26\n        }, this),\n        asMessage: true,\n        end: true\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ChatBotExp2;","map":{"version":3,"sources":["E:/ITI/React/pre-project/src/Pages/ChatBotExp2.js"],"names":["React","Component","PropTypes","ChatBot","Reviewc","constructor","props","state","name","city","number","site","slogane","componentWillMount","steps","setState","render","inname","width","propTypes","object","defaultProps","undefined","ChatBotExp2","ans1","Object","id","message","trigger","user","value","asMessage","end"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAIA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,OADK;AAEXC,MAAAA,IAAI,EAAE,YAFK;AAGXC,MAAAA,MAAM,EAAE,aAHG;AAIXC,MAAAA,IAAI,EAAE,YAJK;AAKXC,MAAAA,OAAO,EAAE;AALE,KAAb;AAOD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB,CADmB,CAEnB;AAEA;;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAWM,KAAjB;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA;AAAF,KAAd;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAO;AAAER,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA,MAAd;AAAsBC,MAAAA,IAAtB;AAA4BC,MAAAA;AAA5B,QAAwC,KAAKL,KAApD;;AAEA,QAAI,KAAKD,KAAL,CAAWW,MAAX,IAAqB,MAAzB,EAAiC;AAC/B,0BACE;AAAA,mCAAgBR,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;AAED,wBACE;AAAK,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAA,iCAKE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKT;AAAL;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AA5D6B;;AA+DhCL,OAAO,CAACe,SAAR,GAAoB;AAClBL,EAAAA,KAAK,EAAEZ,SAAS,CAACkB;AADC,CAApB;AAIAhB,OAAO,CAACiB,YAAR,GAAuB;AACrBP,EAAAA,KAAK,EAAEQ;AADc,CAAvB;;AAIA,MAAMC,WAAN,SAA0BtB,SAA1B,CAAoC;AAChCe,EAAAA,MAAM,GAAG;AACP,QAAIQ,IAAI,GAAGC,MAAX;AACA,wBACE,QAAC,OAAD;AACA,MAAA,KAAK,EAAE,CACH;AACEC,QAAAA,EAAE,EAAE,GADN;AAEEC,QAAAA,OAAO,EAAE,4BAFX;AAGEC,QAAAA,OAAO,EAAE;AAHX,OADG,EAMH;AACEF,QAAAA,EAAE,EAAE,GADN;AAEEG,QAAAA,IAAI,EAAE,IAFR;AAGED,QAAAA,OAAO,EAAG,GAAGE,KAAD,IAAW;AACrB,cAAKA,KAAK,IAAI,YAAd,EAA6B;AAC3B,mBAAO,GAAP;AACD;;AACD,iBAAO,GAAP;AACD,SAAC;AAEF;AACd;AACA;AACA;AACA;AACA;;AAfY,OANG,EAwBH;AACEJ,QAAAA,EAAE,EAAE,GADN;AAEEzB,QAAAA,SAAS,eAAE,QAAC,OAAD;AAAS,UAAA,MAAM,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFb;AAGE8B,QAAAA,SAAS,EAAE,IAHb;AAIEC,QAAAA,GAAG,EAAE;AAJP,OAxBG;AADP;AAAA;AAAA;AAAA;AAAA,YADF;AAmCD;;AAtC+B;;AAyCpC,eAAeT,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatBot from 'react-simple-chatbot';\r\n\r\n\r\n\r\nclass Reviewc extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: 'Ahmed',\r\n      city: 'Alexandria',\r\n      number: '01090761007',\r\n      site: 'Has health',\r\n      slogane: 'where care found',\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { steps } = this.props;\r\n    //const { name, city, number, site, slogane } = steps;\r\n\r\n    //this.setState({ name, city, number, site, slogane });\r\n    const { name } = steps;\r\n    this.setState({ name });\r\n  }\r\n\r\n  render() {\r\n    const  { name, city, number, site, slogane } = this.state;\r\n\r\n    if( this.props.inname == \"city\" ){\r\n      return (\r\n        <p> Welcome in {city} </p>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <h3>Summary</h3>\r\n        <table>\r\n          <tbody>\r\n            {/*<tr>\r\n              <td>Name</td>\r\n              <td>{name.value}</td>\r\n            </tr>*/}\r\n            <tr>\r\n              <td>City</td>\r\n              <td>{city}</td>\r\n            </tr>\r\n            {/*<tr>\r\n              <td>Number</td>\r\n              <td>{number}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Site Name</td>\r\n              <td>{site}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Site Slogane</td>\r\n              <td>{slogane}</td>\r\n            </tr>*/}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReviewc.propTypes = {\r\n  steps: PropTypes.object,\r\n};\r\n\r\nReviewc.defaultProps = {\r\n  steps: undefined,\r\n};\r\n\r\nclass ChatBotExp2 extends Component {\r\n    render() {\r\n      let ans1 = Object;\r\n      return (\r\n        <ChatBot\r\n        steps={[\r\n            {\r\n              id: '1',\r\n              message: 'Hi ahmed what do you mind?',\r\n              trigger: '2',\r\n            },\r\n            {\r\n              id: '2',\r\n              user: true,\r\n              trigger: `${(value) => {\r\n                if ( value == \"what city?\" ) {\r\n                  return '3';\r\n                }\r\n                return '2';\r\n              }}`,\r\n               \r\n              /*validator: (value) => {\r\n                if ( value == \"what city?\" ) {\r\n                  ans1 = Object.bind(<Reviewc inname=\"city\"/>);\r\n                } \r\n\r\n                return true;\r\n              },*/             \r\n            },\r\n            {\r\n              id: '3',\r\n              Component: <Reviewc inname='city' />,\r\n              asMessage: true,\r\n              end: true,\r\n            },\r\n          ]}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default ChatBotExp2;"]},"metadata":{},"sourceType":"module"}