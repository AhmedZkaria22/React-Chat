{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; //import FormValidate from './formValidate';\n\nconst useForm = (callback, FormValidate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: '',\n    useremail: '',\n    userpass: '',\n    userpassconf: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(FormValidate(values));\n    setIsSubmitting(true);\n  };\n  /*useEffect(\r\n    () => {\r\n      if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n      }\r\n    },\r\n    [errors]\r\n  );*/\n\n\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useForm, \"OFutTzbPOOTil7Negl8OUqPq8E8=\");\n\nexport default useForm;","map":{"version":3,"sources":["E:/ITI/React/pre-project/src/components/Form/useForm.js"],"names":["useState","useEffect","useForm","callback","FormValidate","values","setValues","username","useremail","userpass","userpassconf","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,YAAX,KAA4B;AAAA;;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,SAAS,EAAE,EAFwB;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,YAAY,EAAE;AAJqB,GAAD,CAApC;AAOA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMe,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAb,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACY,IAAD,GAAQC;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACK,cAAF;AAEAT,IAAAA,SAAS,CAACR,YAAY,CAACC,MAAD,CAAb,CAAT;AACAS,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GALD;AAOA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,SAAO;AAAEC,IAAAA,YAAF;AAAgBV,IAAAA,MAAhB;AAAwBe,IAAAA,YAAxB;AAAsCT,IAAAA;AAAtC,GAAP;AACD,CApCD;;GAAMT,O;;AAsCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n//import FormValidate from './formValidate';\r\n\r\nconst useForm = (callback, FormValidate) => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    useremail: '',\r\n    userpass: '',\r\n    userpassconf: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});  \r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    setErrors(FormValidate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  /*useEffect(\r\n    () => {\r\n      if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n      }\r\n    },\r\n    [errors]\r\n  );*/\r\n\r\n  return { handleChange, values, handleSubmit, errors };\r\n};\r\n\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}