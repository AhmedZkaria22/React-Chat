{"ast":null,"code":"var _jsxFileName = \"E:\\\\ITI\\\\React\\\\pre-project\\\\src\\\\Pages\\\\services.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../Styles/style0.css';\nimport { Accordion, Card, Button } from 'react-bootstrap';\nimport CardsContentJSON from './sCards.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst jsonArr = JSON.stringify(CardsContentJSON.CardsContent);\n\nconst services = () => {\n  //console.log(jsonArr.slice(jsonArr.search('\"',0)+1,5));\n  //console.log(jsonArr.split('\"')[1] , jsonArr.split('\"')[3] +\"\\n\"+ jsonArr.split('\"')[5] , jsonArr.split('\"')[7]);    \n  function addCard(x, y) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n          as: Button,\n          variant: \"link\",\n          eventKey: y,\n          children: jsonArr.split('\"')[x]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n        eventKey: y,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: jsonArr.split('\"')[x + 2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      defaultActiveKey: \"0\",\n      children: [addCard(1, 0), addCard(5, 1)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default services;","map":{"version":3,"sources":["E:/ITI/React/pre-project/src/Pages/services.js"],"names":["React","Accordion","Card","Button","CardsContentJSON","jsonArr","JSON","stringify","CardsContent","services","addCard","x","y","split"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,OAAO,sBAAP;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,MAAzB,QAAsC,iBAAtC;AACA,OAAOC,gBAAP,MAA6B,eAA7B;;;AACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAeH,gBAAgB,CAACI,YAAhC,CAAhB;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACnB;AACA;AACA,WAASC,OAAT,CAAiBC,CAAjB,EAAmBC,CAAnB,EAAqB;AACjB,wBACA,QAAC,IAAD;AAAA,8BACI,QAAC,IAAD,CAAM,MAAN;AAAA,+BACI,QAAC,SAAD,CAAW,MAAX;AAAkB,UAAA,EAAE,EAAET,MAAtB;AAA8B,UAAA,OAAO,EAAC,MAAtC;AAA6C,UAAA,QAAQ,EAAES,CAAvD;AAAA,oBACKP,OAAO,CAACQ,KAAR,CAAc,GAAd,EAAmBF,CAAnB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,QAAQ,EAAEC,CAA9B;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAA,oBAAYP,OAAO,CAACQ,KAAR,CAAc,GAAd,EAAmBF,CAAC,GAAC,CAArB;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAYH;;AACD,sBACA;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,gBAAgB,EAAC,GAA5B;AAAA,iBACKD,OAAO,CAAC,CAAD,EAAG,CAAH,CADZ,EAEKA,OAAO,CAAC,CAAD,EAAG,CAAH,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADA;AA0BH,CA3CD;;AA6CA,eAAeD,QAAf","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../Styles/style0.css';\r\nimport {Accordion, Card, Button} from 'react-bootstrap';\r\nimport CardsContentJSON from './sCards.json';\r\nconst jsonArr = JSON.stringify(CardsContentJSON.CardsContent);\r\nconst services = () => {\r\n    //console.log(jsonArr.slice(jsonArr.search('\"',0)+1,5));\r\n    //console.log(jsonArr.split('\"')[1] , jsonArr.split('\"')[3] +\"\\n\"+ jsonArr.split('\"')[5] , jsonArr.split('\"')[7]);    \r\n    function addCard(x,y){\r\n        return(\r\n        <Card>\r\n            <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey={y}>\r\n                    {jsonArr.split('\"')[x]}\r\n                </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey={y}>\r\n                <Card.Body>{jsonArr.split('\"')[x+2]}</Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n        );\r\n    }\r\n    return (        \r\n    <>\r\n        <Accordion defaultActiveKey=\"0\">\r\n            {addCard(1,0)}\r\n            {addCard(5,1)}\r\n            {/*<Card>\r\n                <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                        {jsonArr.split('\"')[1]}                            \r\n                    </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">                        \r\n                    <Card.Body>{jsonArr.split('\"')[3]}</Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} className={`btn btn-link text-left pl-4`} variant=\"link\" eventKey=\"1\">\r\n                    {jsonArr.split('\"')[5]}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body>{jsonArr.split('\"')[7]}</Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>*/}\r\n        </Accordion>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default services;"]},"metadata":{},"sourceType":"module"}