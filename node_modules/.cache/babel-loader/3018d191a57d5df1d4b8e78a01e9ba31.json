{"ast":null,"code":"var _jsxFileName = \"E:\\\\ITI\\\\React\\\\pre-project\\\\src\\\\Pages\\\\ChatBotExp2.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport { FaAngleDown } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#22A7F0',\n  headerFontColor: '#171D1C',\n  headerFontSize: '15px',\n  botBubbleColor: '#22A7F0',\n  botFontColor: '#FFFBFA',\n  userBubbleColor: '#EFE9F4',\n  userFontColor: '#171D1C'\n};\nconst btnStyle = {\n  position: \"absolute\",\n  top: \"0.6rem\",\n  right: \"1.2rem\",\n  zIndex: \"99999\",\n  borderRadius: \"50%\",\n  height: \"2rem\",\n  width: \"2rem\"\n};\n\nclass Reviewc extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: 'Ahmed',\n      city: 'Alexandria',\n      number: '01090761007',\n      site: 'Has health',\n      slogane: 'where care found'\n    };\n  }\n\n  componentWillMount() {\n    const {\n      steps\n    } = this.props; //const { name, city, number, site, slogane } = steps;\n    //this.setState({ name, city, number, site, slogane });\n\n    const {\n      name\n    } = steps;\n    this.setState({\n      name\n    });\n  }\n\n  render() {\n    const {\n      name,\n      city,\n      number,\n      site,\n      slogane\n    } = this.state;\n\n    if (this.props.inname == \"city\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Welcome in \", city, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReviewc.propTypes = {\n  steps: PropTypes.object\n};\nReviewc.defaultProps = {\n  steps: undefined\n};\n\nclass ChatBotExp2 extends Component {\n  render() {\n    //let ans1 = Object;\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(ChatBot, {\n        steps: [{\n          id: '1',\n          message: 'Hi ahmed what do you mind?',\n          trigger: '2'\n        }, {\n          id: '2',\n          user: true,\n          trigger: '3'\n        }, {\n          id: '3',\n\n          /*component: <Reviewc inname='city'/>,\r\n          asMessage: true,*/\n          message: 'Welcome in Alexandria',\n          trigger: 'end-message'\n        }, {\n          id: 'end-message',\n          message: 'Thanks! Your data was submitted successfully!',\n          end: true\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        style: btnStyle,\n        children: /*#__PURE__*/_jsxDEV(FaAngleDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ChatBotExp2;","map":{"version":3,"sources":["E:/ITI/React/pre-project/src/Pages/ChatBotExp2.js"],"names":["React","Component","PropTypes","ChatBot","ThemeProvider","FaAngleDown","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","btnStyle","position","top","right","zIndex","borderRadius","height","width","Reviewc","constructor","props","state","name","city","number","site","slogane","componentWillMount","steps","setState","render","inname","propTypes","object","defaultProps","undefined","ChatBotExp2","id","message","trigger","user","end"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatBot from 'react-simple-chatbot';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { FaAngleDown } from 'react-icons/fa';\r\n\r\nconst theme = {\r\n  background: '#f5f8fb',\r\n  fontFamily: 'Helvetica Neue',\r\n  headerBgColor: '#22A7F0',\r\n  headerFontColor: '#171D1C',\r\n  headerFontSize: '15px',\r\n  botBubbleColor: '#22A7F0',\r\n  botFontColor: '#FFFBFA',\r\n  userBubbleColor: '#EFE9F4',\r\n  userFontColor: '#171D1C',\r\n};\r\n\r\nconst btnStyle = {\r\n  position: \"absolute\",\r\n  top: \"0.6rem\",\r\n  right: \"1.2rem\",\r\n  zIndex: \"99999\",\r\n  borderRadius: \"50%\",\r\n  height: \"2rem\",\r\n  width: \"2rem\",\r\n}\r\n\r\nclass Reviewc extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: 'Ahmed',\r\n      city: 'Alexandria',\r\n      number: '01090761007',\r\n      site: 'Has health',\r\n      slogane: 'where care found',\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { steps } = this.props;\r\n    //const { name, city, number, site, slogane } = steps;\r\n\r\n    //this.setState({ name, city, number, site, slogane });\r\n    const { name } = steps;\r\n    this.setState({ name });\r\n  }\r\n\r\n  render() {\r\n    const  { name, city, number, site, slogane } = this.state;\r\n\r\n    if( this.props.inname == \"city\" ){\r\n      return (\r\n        <p> Welcome in {city} </p>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <h3>Summary</h3>\r\n        <table>\r\n          <tbody>\r\n            {/*<tr>\r\n              <td>Name</td>\r\n              <td>{name.value}</td>\r\n            </tr>*/}\r\n            <tr>\r\n              <td>City</td>\r\n              <td>{city}</td>\r\n            </tr>\r\n            {/*<tr>\r\n              <td>Number</td>\r\n              <td>{number}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Site Name</td>\r\n              <td>{site}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Site Slogane</td>\r\n              <td>{slogane}</td>\r\n            </tr>*/}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReviewc.propTypes = {\r\n  steps: PropTypes.object,\r\n};\r\n\r\nReviewc.defaultProps = {\r\n  steps: undefined,\r\n};\r\n\r\nclass ChatBotExp2 extends Component {\r\n    render() {\r\n      //let ans1 = Object;\r\n      return (\r\n        <ThemeProvider theme={theme}>\r\n        <ChatBot\r\n        steps={[\r\n            {\r\n              id: '1',\r\n              message: 'Hi ahmed what do you mind?',\r\n              trigger: '2',\r\n            },\r\n            {\r\n              id: '2',\r\n              user: true,\r\n              trigger: '3',           \r\n            },\r\n            {\r\n              id: '3',\r\n              /*component: <Reviewc inname='city'/>,\r\n              asMessage: true,*/\r\n              message: 'Welcome in Alexandria',\r\n              trigger: 'end-message',\r\n            },\r\n            {\r\n              id: 'end-message',\r\n              message: 'Thanks! Your data was submitted successfully!',\r\n              end: true,\r\n            },\r\n          ]}\r\n        /> <button style={btnStyle}><FaAngleDown /></button>\r\n        </ThemeProvider>        \r\n      );\r\n    }\r\n  }\r\n  \r\nexport default ChatBotExp2;"]},"metadata":{},"sourceType":"module"}